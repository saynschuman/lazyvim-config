-- Keymaps are automatically loaded on the VeryLazy event
-- Default keymaps that are always set: https://github.com/LazyVim/LazyVim/blob/main/lua/lazyvim/config/keymaps.lua
-- Add any additional keymaps here
-- –û—Ç–∫—Ä—ã—Ç—å –ø–æ–ª–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
local map = vim.keymap.set
local opts = { noremap = true, silent = true }

-- üîç –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
map("n", "<leader>gd", "<cmd>DiffviewOpen<CR>", { desc = "üìÇ Diff –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞" })
map("n", "<leader>gD", "<cmd>DiffviewOpen HEAD~1<CR>", { desc = "üìÇ Diff —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º –∫–æ–º–º–∏—Ç–æ–º" })
map("n", "<leader>gq", "<cmd>DiffviewClose<CR>", { desc = "‚ùå –ó–∞–∫—Ä—ã—Ç—å Diffview" })

-- üïì –ò—Å—Ç–æ—Ä–∏—è
map("n", "<leader>gh", "<cmd>DiffviewFileHistory %<CR>", { desc = "üïò –ò—Å—Ç–æ—Ä–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞" })
map("n", "<leader>gH", "<cmd>DiffviewFileHistory<CR>", { desc = "üïò –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞" })

-- üß≠ –ü–∞–Ω–µ–ª—å —Ñ–∞–π–ª–æ–≤
map(
  "n",
  "<leader>gt",
  "<cmd>DiffviewToggleFiles<CR>",
  { desc = "üìÅ –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å —Ñ–∞–π–ª–æ–≤" }
)
map("n", "<leader>gf", "<cmd>DiffviewFocusFiles<CR>", { desc = "üîé –§–æ–∫—É—Å –Ω–∞ –ø–∞–Ω–µ–ª—å —Ñ–∞–π–ª–æ–≤" })
map("n", "<leader>gr", "<cmd>DiffviewRefresh<CR>", { desc = "üîÑ –û–±–Ω–æ–≤–∏—Ç—å Diffview" })

-- üìë –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º
map("n", "]c", "]c", { desc = "‚û° –°–ª–µ–¥—É—é—â–∏–π hunk (diff)" })
map("n", "[c", "[c", { desc = "‚¨Ö –ü—Ä–µ–¥—ã–¥—É—â–∏–π hunk (diff)" })

-- üß© –î–ª—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤/–º–µ—Ä–∂–∞ (–≤–Ω—É—Ç—Ä–∏ merge view)
map("n", "<leader>ga", ":DiffviewToggleFiles<CR>", { desc = "üß© –ü—Ä–∏–Ω—è—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è (toggle panel)" })
-- –ú–∞–ø–ø–∏–Ω–≥–∏ —Ç–∏–ø–∞ `:DiffviewFileHistory HEAD~3 -- path` –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –≤—Ä—É—á–Ω—É—é, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å

-- üõ†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏–∑—É–∞–ª–∞ diff-–æ–∫–æ–Ω (–Ω–µ hotkey, –Ω–æ –ø–æ–ª–µ–∑–Ω–æ)
vim.opt.fillchars:append({ diff = " " }) -- –¥–∏–∞–≥–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–ª–æ—Å—ã –≤–º–µ—Å—Ç–æ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫

-- Compare

vim.keymap.set("n", "<leader>gc", function()
  -- –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏ —É–¥–∞–ª—ë–Ω–Ω—ã—Ö –≤–µ—Ç–æ–∫
  local branches = vim.fn.systemlist("git branch --all --format='%(refname:short)'")

  -- –£–±–∏—Ä–∞–µ–º —Ç–µ–∫—É—â—É—é HEAD, origin/HEAD –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º
  local clean = {}
  for _, b in ipairs(branches) do
    if not b:match("HEAD") then
      table.insert(clean, b)
    end
  end
  table.sort(clean)

  -- –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
  local current = vim.fn.system("git rev-parse --abbrev-ref HEAD"):gsub("%s+", "")

  -- –í—ã–±–æ—Ä –≤–µ—Ç–∫–∏
  vim.ui.select(clean, {
    prompt = "–°—Ä–∞–≤–Ω–∏—Ç—å —Å –≤–µ—Ç–∫–æ–π:",
  }, function(choice)
    if not choice or choice == current then
      print("–í–µ—Ç–∫–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞ –∏–ª–∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ç–µ–∫—É—â–µ–π")
      return
    end
    -- –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    local cmd = string.format("DiffviewOpen %s...%s", choice, current)
    vim.cmd(cmd)
  end)
end, { desc = "üîÄ Diff —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–µ—Ç–∫–æ–π" })

-- –ì–æ—Ä—è—á–∞—è –∫–ª–∞–≤–∏—à–∞ <leader>gb: –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–µ—Ç–∫—É
vim.keymap.set("n", "<leader>gb", function()
  local branches = vim.fn.systemlist("git branch --all --format='%(refname:short)'")

  local clean = {}
  for _, b in ipairs(branches) do
    if not b:match("HEAD") then
      table.insert(clean, b)
    end
  end

  table.sort(clean)

  vim.ui.select(clean, { prompt = "–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –≤–µ—Ç–∫—É:" }, function(choice)
    if not choice then
      vim.notify("–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", vim.log.levels.INFO)
      return
    end

    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ª–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ç–∫–∞
    vim.fn.system("git show-ref --verify --quiet refs/heads/" .. choice)
    local output
    if vim.v.shell_error ~= 0 then
      -- –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω—É—é –≤–µ—Ç–∫—É
      local remote, branch = choice:match("^([^/]+)/(.+)$")
      if remote and branch then
        output = vim.fn.system(string.format("git checkout -b %s %s/%s", branch, remote, branch))
        choice = branch
      else
        output = vim.fn.system("git checkout " .. choice)
      end
    else
      output = vim.fn.system("git checkout " .. choice)
    end

    if vim.v.shell_error == 0 then
      vim.notify("‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ –≤–µ—Ç–∫—É: " .. choice, vim.log.levels.INFO)
    else
      vim.notify("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è:\n" .. output, vim.log.levels.ERROR)
    end
  end)
end, { desc = "üîÅ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–µ—Ç–∫—É" })
